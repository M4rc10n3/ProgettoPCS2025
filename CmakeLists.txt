# Minima versione di cmake richiesta per compilare il progetto
cmake_minimum_required(VERSION 3.9) 

# La scritta che riguarda il progetto con il suo nome, i linguaggi utilizzati e la evrsione del progetto
project(Facsimile LANGUAGES C CXX VERSION 1.0.0)

# Set C++ Standard
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# IMPOSE WARNINGS ON DEBUG
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall -Wextra -pedantic-errors")

# IMPOSE CXX FLAGS FOR WINDOWS
if (WIN32)
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wa,-mbig-obj")
endif (WIN32)

# Librerie 
## Eigen3
find_package(Eigen3 CONFIG REQUIRED)
list(APPEND ${PROJECT_NAME}_LINKED_LIBRARIES PUBLIC Eigen3::Eigen)

## Threads
find_package(Threads REQUIRED)
list(APPEND ${PROJECT_NAME}_LINKED_LIBRARIES PRIVATE Threads::Threads)

## GTest
find_package(GTest REQUIRED)

list(APPEND ${PROJECT_NAME}_LINKED_LIBRARIES PRIVATE GTest::gtest)
list(APPEND ${PROJECT_NAME}_LIBRARIES PRIVATE GTest::gtest_main)
list(APPEND ${PROJECT_NAME}_LIBRARIES PRIVATE GTest::gmock)
list(APPEND ${PROJECT_NAME}_LIBRARIES PRIVATE GTest::gmock_main)

## SUBDIRECTORIES
add_subdirectory(src)

list(APPEND ${PROJECT_NAME}_SOURCES ${polygonalMesh_sources})
list(APPEND ${PROJECT_NAME}_HEADERS ${polygonalMesh_headers})
list(APPEND ${PROJECT_NAME}_INCLUDE ${polygonalMesh_includes})

add_subdirectory(ExportParaview)

list(APPEND ${PROJECT_NAME}_SOURCES ${src_paraview_sources})
list(APPEND ${PROJECT_NAME}_HEADERS ${src_paraview_headers})
list(APPEND ${PROJECT_NAME}_INCLUDE ${src_paraview_includes})

# Create executable
list(APPEND ${PROJECT_NAME}_sources 
        ${src_sources} 
        ${src_paraview_sources})

list(APPEND ${PROJECT_NAME}_headers 
        ${src_headers} 
        ${src_paraview_headers})

list(APPEND ${PROJECT_NAME}_sources 
        ${src_includes} 
        ${src_paraview_includes})

        
# Create executable
add_executable(${CMAKE_PROJECT_NAME} main.cpp
                ${${PROJECT_NAME}_sources}
                ${${PROJECT_NAME}_headers})


target_include_directories(${CMAKE_PROJECT_NAME} PUBLIC 
                            ${${PROJECT_NAME}src_includes})


# file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/PolygonalMesh/Cell0Ds.csv  ${CMAKE_CURRENT_SOURCE_DIR}/PolygonalMesh/Cell1Ds.csv  ${CMAKE_CURRENT_SOURCE_DIR}/PolygonalMesh/Cell2Ds.csv
#       DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

target_link_libraries(${PROJECT_NAME}_TEST ${Facsimile_LINKED_LIBRARIES})
target_include_directories(${PROJECT_NAME}_TEST PRIVATE ${Facsimile_INCLUDE} ${src_test_includes})
target_compile_options(${PROJECT_NAME}_TEST PUBLIC -fPIC)